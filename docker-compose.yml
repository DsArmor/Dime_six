version: "3.9"

services:

  server:
    container_name: spring_container_booking
    build: .
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    environment:
      SPRING_DATASOURCE_URL: "jdbc:postgresql://postgres_container_booking:5432/dime"
      SPRING_DATASOURCE_USERNAME: "argoc"
      SPRING_DATASOURCE_PASSWORD: "123"
      SPRING_JPA_HIBERNATE_DDL_AUTO: "update"
    networks:
      - main

  postgres:
    container_name: postgres_container_booking
    image: postgres:13.3
    environment:
      POSTGRES_DB: "dime"
      POSTGRES_USER: "argoc"
      POSTGRES_PASSWORD: "123"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ../Init Database:/docker-entrypoint-initdb.d
      - .:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U argoc -d dime"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    networks:
      - main

  pgadmin:
    container_name: pgadmin_container_booking
    image: dpage/pgadmin4:5.7
    environment:
      PGADMIN_DEFAULT_EMAIL: "umpa@lumpa.com"
      PGADMIN_DEFAULT_PASSWORD: "123"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - ./pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
      - main

  react:
    container_name: react_container_booking
    build:
      context: frontend
      args:
        REACT_APP_HOST_IP_ADDRESS: ${REACT_IP_ADDRESS}
    ports:
      - "3000:3000"
    depends_on:
      - server
    networks:
      - main

networks:
  main:
    driver: bridge
